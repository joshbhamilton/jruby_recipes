#!/bin/bash

# Start/stop script for glassfish; In general, just pass args through on start/restart.  On stop, look in the "standard" location for the pid file or use the pid file given on the command line.

PID=""

function get_pid {
  PID=`ps ax |grep bin/java | grep jruby | grep trinidad | cut -d " " -f 1`
}

function stop {
  get_pid
  if [ -z $PID ]; then
    echo "Trinidad is not running."
    exit 1
  else
    echo -n "Stopping Trinidad.."
    if [ -z $2 ]; then
      kill $PID
    else
      kill `cat $2`
    fi
    echo ".. Done."
  fi
}


function start {
  get_pid
  if [ -z $PID ]; then
    echo  "Starting Trinidad..."
    exec 1>&-
    exec 2>&-
    exec 3>&-
    nohup jruby -S trinidad $@ & <&- 2>&1 > /dev/null
    sleep 1
    get_pid
    echo "Done. PID=$PID"
  else
    echo "Trinidad is already running, PID=$PID"
  fi
}

function restart {
  echo  "Restarting Trinidad.."
  get_pid
  if [ -z $PID ]; then
    start
  else
    stop
    start
  fi
}


function status {
  get_pid
  if [ -z  $PID ]; then
    echo "Trinidad is not running."
    exit 1
  else
    echo "Trinidad is running, PID=$PID"
  fi
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    restart
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
esac 
